{
	"info": {
		"_postman_id": "7b665418-8305-4248-b99d-652caaab87a0",
		"name": "homework_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\",jsonData.token);\r",
							"\r",
							"for(let i =0; i<10; i++){\r",
							"    console.log(i)\r",
							"\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "password",
							"value": "147",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login?name=Olga&password=147",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "name",
							"value": "Olga"
						},
						{
							"key": "password",
							"value": "147"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Проверка статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							" \"type\": \"object\",\r",
							" \"properties\": {\r",
							"\"person\": {\r",
							"    \"type\": \"object\", \r",
							" \"properties\": {\r",
							"     \"u_age\": {\"type\": \"integer\"},\r",
							"     \"u_name\": {\"type\": \"array\",\r",
							"     \"items\": [\r",
							"         {\"type\": \"string\"},\r",
							"         {\"type\": \"integer\"},\r",
							"         {\"type\": \"integer\"}  \r",
							"     ]},\r",
							"     \"u_salary_1_5_year\": {\"type\": \"integer\"}},\r",
							"     \"required\": [\"u_age\", \"u_name\", \"u_salary_1_5_year\"]},\r",
							"     \"qa_salary_after_12_months\": {\"type\": \"number\"},\r",
							"     \"qa_salary_after_6_months\": {\"type\": \"integer\"},\r",
							"     \"start_qa_salary\": {\"type\": \"integer\"}},\r",
							"     \r",
							"     \"required\":[\"person\",\"qa_salary_after_12_months\",\"qa_salary_after_6_months\",\"start_qa_salary\"]}\r",
							"     \r",
							"     pm.test('schema is valid', function () {\r",
							"         var jsonData = pm.response.json();\r",
							"         pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"     });\r",
							"\r",
							"\r",
							"//Проверка структуры json в ответе (с помощью генератора)\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"person\": {\r",
							"                \"u_age\": 34,\r",
							"                \"u_name\": [\r",
							"                    \"Olga\",\r",
							"                    650,\r",
							"                    34\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": 2600\r",
							"            },\r",
							"            \"qa_salary_after_12_months\": 1885.0,\r",
							"            \"qa_salary_after_6_months\": 1300,\r",
							"            \"start_qa_salary\": 650\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"person\": {\r",
							"            \"$id\": \"#/properties/person\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The person schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"u_age\": 34,\r",
							"                    \"u_name\": [\r",
							"                        \"Olga\",\r",
							"                        650,\r",
							"                        34\r",
							"                    ],\r",
							"                    \"u_salary_1_5_year\": 2600\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"u_age\",\r",
							"                \"u_name\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"u_age\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_age\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_age schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        34\r",
							"                    ]\r",
							"                },\r",
							"                \"u_name\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_name\",\r",
							"                    \"type\": \"array\",\r",
							"                    \"title\": \"The u_name schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": [],\r",
							"                    \"examples\": [\r",
							"                        [\r",
							"                            \"Olga\",\r",
							"                            650\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"additionalItems\": true,\r",
							"                    \"items\": {\r",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",\r",
							"                                \"type\": \"string\",\r",
							"                                \"title\": \"The first anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": \"\",\r",
							"                                \"examples\": [\r",
							"                                    \"Olga\"\r",
							"                                ]\r",
							"                            },\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",\r",
							"                                \"type\": \"integer\",\r",
							"                                \"title\": \"The second anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": 0,\r",
							"                                \"examples\": [\r",
							"                                    650,\r",
							"                                    34\r",
							"                                ]\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_salary_1_5_year schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        2600\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"qa_salary_after_12_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The qa_salary_after_12_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                1885.0\r",
							"            ]\r",
							"        },\r",
							"        \"qa_salary_after_6_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The qa_salary_after_6_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                1300\r",
							"            ]\r",
							"        },\r",
							"        \"start_qa_salary\": {\r",
							"            \"$id\": \"#/properties/start_qa_salary\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The start_qa_salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                650\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"pm.test('schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});\r",
							"\r",
							"//В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата переумножения на коэффициент\r",
							"let salary = pm.response.json();\r",
							"\r",
							"var salary0 = JSON.parse(request.data);\r",
							"let salary1 = salary0.salary * 2.9;\r",
							"console.log(salary1);\r",
							"console.log(salary0);\r",
							"\r",
							"pm.test('salary validation', function () {\r",
							"    pm.expect(salary.qa_salary_after_12_months).to.eql(salary1)\r",
							"});\r",
							"\r",
							"//Передача name в окружение\r",
							"let namData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"name\", namData.person.u_name[0]);\r",
							"\r",
							"//Передача u_salary1_5_year в окружение\r",
							"let resData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"u_salary_1_5_year\", resData.person.u_salary_1_5_year);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"age\": 34,\r\n  \"salary\": 650,\r\n  \"name\": \"Olga\",\r\n  \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "New_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Проверка статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": 34,\r",
							"            \"name\": \"Olga\",\r",
							"            \"salary\": [\r",
							"                650,\r",
							"                \"1300\",\r",
							"                \"1950\"\r",
							"            ]\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                34\r",
							"            ]\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Olga\"\r",
							"            ]\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"$id\": \"#/properties/salary\",\r",
							"            \"type\": \"array\",\r",
							"            \"title\": \"The salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": [],\r",
							"            \"examples\": [\r",
							"                [\r",
							"                    650,\r",
							"                    \"1300\"\r",
							"                ]\r",
							"            ],\r",
							"            \"additionalItems\": true,\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/salary/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/salary/items/anyOf/0\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The first anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": 0,\r",
							"                        \"examples\": [\r",
							"                            650\r",
							"                        ]\r",
							"                    },\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/salary/items/anyOf/1\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The second anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"1300\",\r",
							"                            \"1950\"\r",
							"                        ]\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"pm.test('schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});\r",
							"\r",
							"//В ответе  указаны коэффициенты умножения salary, напишите тесты по проверке правильности результатов перемножения на коэффициент\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test salary in response *2\", function () {\r",
							"    pm.expect(Number(jsonData.salary[1])).to.eql((pm.environment.get(\"u_salary_1_5_year\")) * 2);\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql((pm.environment.get(\"u_salary_1_5_year\")) * 3);\r",
							"});\r",
							"\r",
							"//Проверить, что второй элемент массива salary больше первого и нулевого\r",
							"pm.test(\"salary iql\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(Number(jsonData.salary[2])).greaterThan(Number(jsonData.salary[0]));\r",
							"   pm.expect(Number(jsonData.salary[2])).greaterThan(Number(jsonData.salary[1])); \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "34",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{u_salary_1_5_year}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//Проверка статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": 34,\r",
							"            \"daily_food\": 0.78,\r",
							"            \"daily_sleep\": 162.5,\r",
							"            \"name\": \"Olga\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"daily_food\",\r",
							"        \"daily_sleep\",\r",
							"        \"name\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                34\r",
							"            ]\r",
							"        },\r",
							"        \"daily_food\": {\r",
							"            \"$id\": \"#/properties/daily_food\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The daily_food schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                0.78\r",
							"            ]\r",
							"        },\r",
							"        \"daily_sleep\": {\r",
							"            \"$id\": \"#/properties/daily_sleep\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The daily_sleep schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                162.5\r",
							"            ]\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Olga\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"pm.test('schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});\r",
							"\r",
							"pm.test(\"Counting data\", function () { \r",
							"    var jsonData = pm.response.json(); \r",
							"    var requestWeight = parseInt(pm.request.body.formdata.get(\"weight\")); \r",
							" \r",
							"   console.log(requestWeight); \r",
							"   pm.expect(jsonData.daily_food).to.eql(0.012*requestWeight); \r",
							"    pm.expect(jsonData.daily_sleep).to.eql(2.5*requestWeight); \r",
							"     \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "34",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "65",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Проверка статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": \"34\",\r",
							"            \"family\": {\r",
							"                \"children\": [\r",
							"                    [\r",
							"                        \"Alex\",\r",
							"                        24\r",
							"                    ],\r",
							"                    [\r",
							"                        \"Kate\",\r",
							"                        12\r",
							"                    ]\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": 2600\r",
							"            },\r",
							"            \"name\": \"Olga\",\r",
							"            \"salary\": 650\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"family\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"34\"\r",
							"            ]\r",
							"        },\r",
							"        \"family\": {\r",
							"            \"$id\": \"#/properties/family\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The family schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"children\": [\r",
							"                        [\r",
							"                            \"Alex\",\r",
							"                            24\r",
							"                        ],\r",
							"                        [\r",
							"                            \"Kate\",\r",
							"                            12\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"u_salary_1_5_year\": 2600\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"children\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"children\": {\r",
							"                    \"$id\": \"#/properties/family/properties/children\",\r",
							"                    \"type\": \"array\",\r",
							"                    \"title\": \"The children schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": [],\r",
							"                    \"examples\": [\r",
							"                        [\r",
							"                            [\r",
							"                                \"Alex\",\r",
							"                                24\r",
							"                            ],\r",
							"                            [\r",
							"                                \"Kate\",\r",
							"                                12\r",
							"                            ]\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"additionalItems\": true,\r",
							"                    \"items\": {\r",
							"                        \"$id\": \"#/properties/family/properties/children/items\",\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/0\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"title\": \"The first anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": [],\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        \"Alex\",\r",
							"                                        24\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                            \"title\": \"The first anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": \"\",\r",
							"                                            \"examples\": [\r",
							"                                                \"Alex\"\r",
							"                                            ]\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/1\",\r",
							"                                            \"type\": \"integer\",\r",
							"                                            \"title\": \"The second anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": 0,\r",
							"                                            \"examples\": [\r",
							"                                                24\r",
							"                                            ]\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            },\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/1\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"title\": \"The second anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": [],\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        \"Kate\",\r",
							"                                        12\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                            \"title\": \"The first anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": \"\",\r",
							"                                            \"examples\": [\r",
							"                                                \"Kate\"\r",
							"                                            ]\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/1\",\r",
							"                                            \"type\": \"integer\",\r",
							"                                            \"title\": \"The second anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": 0,\r",
							"                                            \"examples\": [\r",
							"                                                12\r",
							"                                            ]\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"$id\": \"#/properties/family/properties/u_salary_1_5_year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_salary_1_5_year schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        2600\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Olga\"\r",
							"            ]\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"$id\": \"#/properties/salary\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                650\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"pm.test('schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});\r",
							"\r",
							"//Проверить, что значение name = значению переменной name из окружения\r",
							"pm.test(\"environment to be production\", function () {\r",
							"    pm.expect(pm.environment.get(\"name\")).to.equal(\"Olga\");\r",
							"});\r",
							"\r",
							"//Проверить, что значение поля age в ответе соответствует отправленному в запросе значению поля age\r",
							"var request_data = request.data;\r",
							"console.log(request_data.age);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "34",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "650",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Проверка статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//можете взять любой объект из списка, используйте рандом.\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"console.log(jsonData.length)\r",
							"var i=jsonData.lenght\r",
							"function getRandomInt(i) {\r",
							"    return Math.floor(Math.random() * 1);\r",
							"};\r",
							"\r",
							"pm.environment.set(\"Curr_ID\", jsonData[getRandomInt(1)].Cur_ID);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "Curr_bun",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Проверка статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var schema = {\r",
							"\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"Cur_Abbreviation\": \"EUR\",\r",
							"            \"Cur_ID\": 292,\r",
							"            \"Cur_Name\": \"Евро\",\r",
							"            \"Cur_OfficialRate\": 2.9964,\r",
							"            \"Cur_Scale\": 1,\r",
							"            \"Date\": \"2021-06-21T00:00:00\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"Cur_Abbreviation\",\r",
							"        \"Cur_ID\",\r",
							"        \"Cur_Name\",\r",
							"        \"Cur_OfficialRate\",\r",
							"        \"Cur_Scale\",\r",
							"        \"Date\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"Cur_Abbreviation\": {\r",
							"            \"$id\": \"#/properties/Cur_Abbreviation\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Cur_Abbreviation schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"EUR\"\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_ID\": {\r",
							"            \"$id\": \"#/properties/Cur_ID\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The Cur_ID schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                292\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_Name\": {\r",
							"            \"$id\": \"#/properties/Cur_Name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Cur_Name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Евро\"\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_OfficialRate\": {\r",
							"            \"$id\": \"#/properties/Cur_OfficialRate\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The Cur_OfficialRate schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                2.9964\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_Scale\": {\r",
							"            \"$id\": \"#/properties/Cur_Scale\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The Cur_Scale schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ]\r",
							"        },\r",
							"        \"Date\": {\r",
							"            \"$id\": \"#/properties/Date\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Date schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"2021-06-21T00:00:00\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"    pm.test('schema is valid', function () {\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "292",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/curr_byn",
					"host": [
						"{{url}}"
					],
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}